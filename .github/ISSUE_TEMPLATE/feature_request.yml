name: üöÄ Feature Request
description: Suggest a feature that's more fire than a RGB gaming setup
title: "feat: "
labels: ["enhancement", "fix-me"]
body:
  - type: markdown
    attributes:
      value: |
        Thanks for dropping this feature request fr fr! Let's make SmolSwarms more cracked than ever üî•

  - type: textarea
    id: feature-description
    attributes:
      label: üìù Feature Description
      description: Tell us what kind of feature would make SmolSwarms hit even more different
      placeholder: |
        We need the SwarmFactory to be able to spawn specialized agent squads like:
        - Research squad that digs through docs faster than a speedrunner finding glitches
        - Dev squad that reviews PRs with more precision than a pixel-perfect TAS
        - Analytics squad that crunches numbers harder than my GPU mining eth (circa 2021)
    validations:
      required: true

  - type: textarea
    id: proposed-solution
    attributes:
      label: üí° Proposed Solution
      description: Drop your galaxy brain ideas on how to implement this
      placeholder: |
        We could add a new method to SwarmFactory that takes squad specs:
        ```python
        squad = factory.spawn_squad({
            "type": "research_team",
            "size": 3,
            "specializations": ["doc_analysis", "data_mining", "knowledge_synthesis"],
            "coordination_protocol": "hierarchical",  # They report to a lead agent
        })
        ```
    validations:
      required: true

  - type: textarea
    id: code-example
    attributes:
      label: üßë‚Äçüíª Usage Example
      description: Show us how you'd want to use this feature (the more cursed the better)
      render: python
      placeholder: |
        from smolswarms import SwarmFactory

        # Initialize factory with that quantum computing energy
        factory = SwarmFactory(compute_mode="parallel_universe")

        # Spawn a research squad that goes harder than a Discord mod during raid
        research_squad = factory.spawn_squad(
            type="research_team",
            agents=[
                {"role": "lead", "model": "claude-3", "skills": ["coordination", "planning"]},
                {"role": "analyst", "model": "claude-3", "skills": ["data_mining", "pattern_matching"]},
                {"role": "synthesizer", "model": "claude-3", "skills": ["writing", "summarization"]},
            ],
            shared_memory=True,  # They all access the same knowledge base fr fr
        )

        # Let them cook
        results = research_squad.research_topic(
            "emergent behaviors in multi-agent systems",
            depth="galaxy_brain",
            style="more_coherent_than_my_sleep_schedule"
        )
    validations:
      required: false
